from dataclasses import dataclass, field

from lantern.models.verification.enums import VerificationResult, VerificationType
from lantern.models.verification.types import VerificationContext


@dataclass
class VerificationJob:
    """
    Site Verification Job.

    Represents a specific check as part of verifying a catalogue static site (i.e. an individual URL/page).

    Termed jobs as verification checks are run in parallel within a job queue.

    Jobs require:
    - a type (i.e. what is being checked)
    - a URL (what to check)
    - context: information needed to run check (e.g. base URL, expected status code)

    Jobs optionally support:
    - exporter: associated Exporter class name if applicable
    - data: information generated by the check (e.g. actual status code)

    Permitted context keys are defined by a TypedDict. Check functions in `lantern.exporters.verification` determine
    required/optional context keys. These functions will set data keys as needed for output to end-users.
    """

    type: VerificationType
    url: str
    context: VerificationContext
    exporter: str | None = None
    result: VerificationResult = VerificationResult.PENDING
    params: dict = field(default_factory=dict)
    data: dict = field(default_factory=dict)
