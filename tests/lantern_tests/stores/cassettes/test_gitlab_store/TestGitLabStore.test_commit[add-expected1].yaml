interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-type:
      - application/json
      User-Agent:
      - python-gitlab/6.0.0
    method: GET
    uri: https://gitlab.example.com/api/v4/projects/1234
  response:
    body:
      string: '{"id":1234}'
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Strict-Transport-Security:
      - max-age=63072000
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-type:
      - application/json
      User-Agent:
      - python-gitlab/6.0.0
    method: GET
    uri: https://gitlab.example.com/api/v4/projects/1234
  response:
    body:
      string: '{"id":1234}'
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Strict-Transport-Security:
      - max-age=63072000
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
- request:
    body: '{"branch": "main", "commit_message": "x", "author_name": "x", "author_email":
      "x@example.com", "actions": [{"action": "create", "file_path": "records/d4/e5/d4e5f6.json",
      "content": "{\n  \"$schema\": \"https://metadata-resources.data.bas.ac.uk/bas-metadata-generator-configuration-schemas/v2/iso-19115-2-v4.json\",\n  \"file_identifier\":
      \"d4e5f6\",\n  \"hierarchy_level\": \"dataset\",\n  \"metadata\": {\n    \"character_set\":
      \"utf8\",\n    \"language\": \"eng\",\n    \"contacts\": [\n      {\n        \"organisation\":
      {\n          \"name\": \"x\"\n        },\n        \"role\": [\n          \"pointOfContact\"\n        ]\n      }\n    ],\n    \"date_stamp\":
      \"2014-06-30\",\n    \"metadata_standard\": {\n      \"name\": \"ISO 19115-2
      Geographic Information - Metadata - Part 2: Extensions for Imagery and Gridded
      Data\",\n      \"version\": \"ISO 19115-2:2009(E)\"\n    }\n  },\n  \"identification\":
      {\n    \"title\": {\n      \"value\": \"x\"\n    },\n    \"abstract\": \"x\",\n    \"dates\":
      {\n      \"creation\": \"2014-06-30\"\n    },\n    \"character_set\": \"utf8\",\n    \"language\":
      \"eng\"\n  }\n}"}]}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '1123'
      Content-type:
      - application/json
      User-Agent:
      - python-gitlab/6.0.0
    method: POST
    uri: https://gitlab.example.com/api/v4/projects/1234/repository/commits
  response:
    body:
      string: '{"id":"def456"}'
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Strict-Transport-Security:
      - max-age=63072000
      Transfer-Encoding:
      - chunked
      Vary:
      - Accept-Encoding
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
    status:
      code: 200
      message: OK
version: 1
